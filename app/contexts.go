// Code generated by goagen v1.3.1, DO NOT EDIT.
//
// API "DNS Resolver": Application Contexts
//
// Command:
// $ goagen
// --design=github.com/mtenrero/dockerDnsrr-discovery/design
// --out=$(GOPATH)/src/github.com/mtenrero/dockerDnsrr-discovery
// --version=v1.3.1

package app

import (
	"context"
	"github.com/goadesign/goa"
	"net/http"
)

// ResolveResolveContext provides the resolve resolve action context.
type ResolveResolveContext struct {
	context.Context
	*goa.ResponseData
	*goa.RequestData
	Hostname string
}

// NewResolveResolveContext parses the incoming request URL and body, performs validations and creates the
// context used by the resolve controller resolve action.
func NewResolveResolveContext(ctx context.Context, r *http.Request, service *goa.Service) (*ResolveResolveContext, error) {
	var err error
	resp := goa.ContextResponse(ctx)
	resp.Service = service
	req := goa.ContextRequest(ctx)
	req.Request = r
	rctx := ResolveResolveContext{Context: ctx, ResponseData: resp, RequestData: req}
	paramHostname := req.Params["hostname"]
	if len(paramHostname) > 0 {
		rawHostname := paramHostname[0]
		rctx.Hostname = rawHostname
	}
	return &rctx, err
}

// OK sends a HTTP response with status code 200.
func (ctx *ResolveResolveContext) OK(r []string) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "text/plain")
	}
	return ctx.ResponseData.Service.Send(ctx.Context, 200, r)
}

// NotDiscoverable sends a HTTP response with status code 204.
func (ctx *ResolveResolveContext) NotDiscoverable(resp []byte) error {
	if ctx.ResponseData.Header().Get("Content-Type") == "" {
		ctx.ResponseData.Header().Set("Content-Type", "text/plain")
	}
	ctx.ResponseData.WriteHeader(204)
	_, err := ctx.ResponseData.Write(resp)
	return err
}
